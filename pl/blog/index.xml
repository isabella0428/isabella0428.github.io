<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Hugo przyszłość niedoskonała</title>
    <link>https://example.com/pl/blog/</link>
    <description>Recent content in Blog on Hugo przyszłość niedoskonała</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl</language>
    <lastBuildDate>Sun, 28 Sep 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://example.com/pl/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tworzenie nowego motywu</title>
      <link>https://example.com/pl/blog/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/pl/blog/creating-a-new-theme/</guid>
      <description>Wprowadzenie Ten samouczek pokaże Ci, jak stworzyć prosty motyw w Hugo. Zakładam, że jesteś zaznajomiony z HTML, wierszem poleceń basha i że dobrze jest używać Markdown do formatowania treści. Wyjaśnię, w jaki sposób Hugo używa szablonów i jak możesz porządkować szablony, aby utworzyć motyw. Nie będę zajmował się używaniem CSS do stylizacji Twojego motywu.
Zaczniemy od utworzenia nowej witryny z bardzo podstawowym szablonem. Następnie dodamy kilka stron i postów. Dzięki niewielkim zmianom możesz tworzyć wiele różnych typów stron internetowych.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://example.com/pl/blog/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/pl/blog/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://example.com/pl/blog/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/pl/blog/hugoisforlovers/</guid>
      <description>&lt;h2 id=&#34;step-1-install-hugo&#34;&gt;Step 1. Install Hugo&lt;/h2&gt;

&lt;p&gt;Go to &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;hugo releases&lt;/a&gt; and download the
appropriate version for your os and architecture.&lt;/p&gt;

&lt;p&gt;Save it somewhere specific as we will be using it in the next step.&lt;/p&gt;

&lt;p&gt;More complete instructions are available at &lt;a href=&#34;https://example.com/overview/installing/&#34;&gt;installing hugo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://example.com/pl/blog/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/pl/blog/migrate-from-jekyll/</guid>
      <description>&lt;h2 id=&#34;move-static-content-to-static&#34;&gt;Move static content to &lt;code&gt;static&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Jekyll has a rule that any directory not starting with &lt;code&gt;_&lt;/code&gt; will be copied as-is to the &lt;code&gt;_site&lt;/code&gt; output. Hugo keeps all static content under &lt;code&gt;static&lt;/code&gt;. You should therefore move it all there.
With Jekyll, something that looked like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/
    ▾ images/
        logo.png
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>